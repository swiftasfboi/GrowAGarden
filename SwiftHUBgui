-- SwiftHUB LocalScript
local frame = script.Parent
local toggleBtn = frame:WaitForChild("ToggleButton")
local dupeBtn = frame:WaitForChild("DupePetButton") -- green button
local removeBtn = frame:WaitForChild("RemoveDupeButton") -- red button
local statusLabel = frame:WaitForChild("StatusLabel")
local miniBar = frame:WaitForChild("MiniBar")
local fill = miniBar:WaitForChild("Fill")

local tweenService = game:GetService("TweenService")
local userInputService = game:GetService("UserInputService")

-- === Dragging Logic ===
local dragging = false
local dragInput, dragStart, startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(
        startPos.X.Scale, startPos.X.Offset + delta.X,
        startPos.Y.Scale, startPos.Y.Offset + delta.Y
    )
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or 
       input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- === Collapse/Expand Toggle ===
local collapsed = false
local fullSize = frame.Size
local collapsedSize = UDim2.new(0, 40, 0, 40)

toggleBtn.MouseButton1Click:Connect(function()
    if collapsed then
        frame:TweenSize(fullSize, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        toggleBtn.Text = "âˆ’"
    else
        frame:TweenSize(collapsedSize, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.3, true)
        toggleBtn.Text = "+"
    end
    collapsed = not collapsed
end)

-- === ðŸ”´ Remove Dupe Button Logic ===
removeBtn.MouseButton1Click:Connect(function()
    removeBtn.Visible = false
    statusLabel.Visible = true
    statusLabel.Text = "Scanning for dupe pets in your inventory..."
    statusLabel.TextColor3 = Color3.fromRGB(255,255,255)

    task.wait(5)

    statusLabel.Text = "Dupe pet found"
    statusLabel.TextColor3 = Color3.fromRGB(0,255,0)

    task.wait(1)

    statusLabel.Text = "Changing pet UUID..."
    statusLabel.TextColor3 = Color3.fromRGB(255,255,255)

    miniBar.Visible = true
    fill.Size = UDim2.new(0,0,1,0)

    local tweenInfo = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween = tweenService:Create(fill, tweenInfo, {Size = UDim2.new(1,0,1,0)})
    tween:Play()

    tween.Completed:Connect(function()
        statusLabel.Text = "Dupe removed!"
        statusLabel.TextColor3 = Color3.fromRGB(0,255,0)

        task.wait(2)

        statusLabel.Visible = false
        miniBar.Visible = false
        removeBtn.Visible = true
    end)
end)

-- === ðŸŸ¢ Dupe Pet Button Logic ===
dupeBtn.MouseButton1Click:Connect(function()
    dupeBtn.Visible = false
    statusLabel.Visible = true
    statusLabel.Text = "Duplicating pet..."
    statusLabel.TextColor3 = Color3.fromRGB(255,255,255)

    -- Step 1: First bar
    miniBar.Visible = true
    fill.Size = UDim2.new(0,0,1,0)

    local tweenInfo = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local tween1 = tweenService:Create(fill, tweenInfo, {Size = UDim2.new(1,0,1,0)})
    tween1:Play()

    tween1.Completed:Connect(function()
        -- Step 2: Changing UUID
        statusLabel.Text = "Changing pet UUID..."
        statusLabel.TextColor3 = Color3.fromRGB(255,255,255)

        fill.Size = UDim2.new(0,0,1,0)
        local tween2 = tweenService:Create(fill, tweenInfo, {Size = UDim2.new(1,0,1,0)})
        tween2:Play()

        tween2.Completed:Connect(function()
            -- Step 3: Finished
            statusLabel.Text = "Pet Duplicated!"
            statusLabel.TextColor3 = Color3.fromRGB(0,255,0)

            task.wait(2)

            statusLabel.Visible = false
            miniBar.Visible = false
            dupeBtn.Visible = true
        end)
    end)
end)
